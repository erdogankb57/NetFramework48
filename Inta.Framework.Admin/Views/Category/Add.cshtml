@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Inta.Framework.Entity.Category

<div class="form-content">
    <div class="popupMessage"></div>

    <form id="saveForm" method="post" novalidate>
        @Html.HiddenFor(m => m.Id)

        <div class="container-fluid">

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori</label>
                    </div><div class="col-lg-9">
                        @(Html.CategorySelectBoxFor(Id: Model.CategoryId, ObjectId: "CategoryId", ObjectName: "CategoryId", DisplayName: "Name", ValueName: "Id", DefaultText: "Lütfen kategori seçiniz", DefaultValue: ""))
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Sayfa Türü</label>
                    </div><div class="col-lg-9">
                        @Html.SelectListFor(query: "Select * from PageType where IsActive=1", ObjectId: "PageTypeId", ObjectName: "PageTypeId", DisplayName: "Name", ValueName: "Id", SelectedValue: (Model.PageTypeId != null ? Model.PageTypeId.ToString() : ""), DefaultText: "Seçiniz", DefaultValue: "", IconName: null, IsRequired: false, IsDisabled: false)
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori Adı</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori Url</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.CategoryUrl, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori Link</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.CategoryLink, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            @{
                if (Inta.Framework.Admin.Base.Authorization.AuthenticationData.IsAdmin)
                {

                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-3">
                                <label for="exampleFormControlInput1">Kategori Kodu</label>
                            </div><div class="col-lg-9">
                                @Html.TextBoxFor(m => m.Code, new { @class = "form-control" })

                            </div>
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(m => m.Code)
                }
            }

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori Başlık</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori Meta Description</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.MetaDecription, new { @class = "form-control" })

                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kategori Meta Keywords</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.MetaKeywords, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            @*<div class="form-group">
                    <div class="row">
                        <div class="col-lg-3">
                            <label for="exampleFormControlInput1">Form Grubu</label>
                        </div><div class="col-lg-9">
                            @Html.DropDownListFor(m => m.FormGroupId, formGroup.ToArray(), new { @class = "form-control" })
                        </div>
                    </div>
                </div>*@
            <div id="categoryImagePanel">

                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-3">
                            <label for="exampleFormControlInput1">Resim</label>
                        </div><div class="col-lg-9">
                            @{
                                int ImageSmallWidth = Convert.ToInt32(ViewBag.ImageSmallWidth);
                                int ImageBigWidth = Convert.ToInt32(ViewBag.ImageBigWidth);

                                @Html.ImageFileUploadFor(Id: Model.Id, ObjectId: "ImageFile", ObjectName: "ImageFile", Image: Model.Image, DeleteUrl: "/Category/DeleteImage", ListObjectId: "CategoryList", isBigImage: true, smallImageCropWidth: ImageSmallWidth, smallImageCropHeight: ImageSmallWidth, bigImageCropWidth: ImageBigWidth, bigImageCropHeight: ImageBigWidth, SaveUrl: "/Category/Index?Message=Kayıt güncelleme işlemi başarıyla tamamlandı")}

                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Resim Tag</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.ImageTag, new { @class = "form-control" })

                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Resim Başlık</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.ImageTitle, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Sıra Numarası</label>
                    </div><div class="col-lg-9">
                        @Html.TextBoxFor(m => m.OrderNumber, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            @{
                if (Inta.Framework.Admin.Base.Authorization.AuthenticationData.IsAdmin)
                {
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-6">
                                <label for="exampleFormControlInput1">Kategori Silinebilir mi</label>
                            </div>
                            <div class="col-lg-9  col-md-6 col-sm-6 col-xs-6">
                                <div class="form-check">
                                    @Html.CheckBoxFor(m => m.CanBeDeleted, new { @class = "form-check-input" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    Html.HiddenFor(m => m.CanBeDeleted);
                                    }
            }

            @{
                if (Inta.Framework.Admin.Base.Authorization.AuthenticationData.IsAdmin)
                {
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-6">
                                <label for="exampleFormControlInput1">Alt Kategori Eklenebilir mi</label>
                            </div><div class="col-lg-9  col-md-6 col-sm-6 col-xs-6">
                                <div class="form-check">
                                    @Html.CheckBoxFor(m => m.CanSubCategoryBeAdded, new { @class = "form-check-input" })
                                </div>

                            </div>
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(m => m.CanSubCategoryBeAdded);
                }
            }

            @{
                if (Inta.Framework.Admin.Base.Authorization.AuthenticationData.IsAdmin)
                {
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-6">
                                <label for="exampleFormControlInput1">İçerik Eklenebilir mi</label>
                            </div><div class="col-lg-9  col-md-6 col-sm-6 col-xs-6">
                                <div class="form-check">
                                    @Html.CheckBoxFor(m => m.CanContentBeAdded, new { @class = "form-check-input" })
                                </div>

                            </div>
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(m => m.CanContentBeAdded);
                }
            }

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-6 col-sm-6 col-xs-6">
                        <label for="exampleFormControlInput1">Aktif mi</label>
                    </div><div class="col-lg-9  col-md-6 col-sm-6 col-xs-6">
                        <div class="form-check">

                            @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group" id="shortExplanationPanel">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Kısa Açıklama</label>
                    </div><div class="col-lg-9">
                        @Html.Raw(Html.TextAreaFor(m => m.ShortExplanation, new { @class = "form-control ckeditor" }))

                    </div>
                </div>
            </div>
            <div class="form-group" id="explanationPanel">
                <div class="row">
                    <div class="col-lg-3">
                        <label for="exampleFormControlInput1">Açıklama</label>
                    </div><div class="col-lg-9">
                        @Html.Raw(Html.TextAreaFor(m => m.Explanation, new { @class = "form-control ckeditor" }))
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <a onclick="history.back()" class="btn btn-standart">Geri dön</a>
                <button type="submit" id="btnsubmit" class="btn btn-standart">Kaydet</button>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    $(function () {
        $Form.Init("saveForm");
        $Form.Save("saveForm", "/Category/Save");
        $TreeSelectBox.Init();
        $TreeSelectBox.Select();

        $("#PageTypeId").change(function () {
            $.ajax({
                url: "/Category/GetPageType",
                type: "POST",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { "id": $(this).val() },
                success: function (response) {
                    debugger;
                    if (response.Data.IsExplanationEnabled) {
                        $("#explanationPanel").show();
                    } else {
                        $("#explanationPanel").hide();
                    }

                    if (response.Data.IsShortExplanationEnabled) {
                        $("#shortExplanationPanel").show();
                    } else {
                        $("#shortExplanationPanel").hide();
                    }
                },
                error: function (response) {

                }
            });
        });

        $("#PageTypeId").change();

    });
</script>